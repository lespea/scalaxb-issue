// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package scalaxb.error.types

/**
 * This is the XML schema for the Common Vulnerability Reporting Framework.  For more information, see the CVRF whitepaper.
 */

trait DocumentStatusEnumType

object DocumentStatusEnumType {
  def fromString(value: String, scope: scala.xml.NamespaceBinding): DocumentStatusEnumType = value match {
    case "Draft"   ⇒ Draft
    case "Interim" ⇒ Interim
    case "Final"   ⇒ Final

  }
}

case object Draft extends DocumentStatusEnumType { override def toString = "Draft" }
case object Interim extends DocumentStatusEnumType { override def toString = "Interim" }
case object Final extends DocumentStatusEnumType { override def toString = "Final" }

case class DocumentTitle(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedNormalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class DocumentType(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedNormalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class ContactDetails(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class IssuingAuthority(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class DocumentPublisher(ContactDetails: Option[scalaxb.error.types.ContactDetails] = None,
    IssuingAuthority: Option[scalaxb.error.types.IssuingAuthority] = None,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val Type = attributes("@Type").as[PublisherEnumType]
  lazy val VendorID = attributes.get("@VendorID") map { _.as[String] }
}

case class ID(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Alias(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Identification(ID: scalaxb.error.types.ID,
  Alias: Seq[scalaxb.error.types.Alias] = Nil)

case class Description(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Revision(Number: String,
  Date: javax.xml.datatype.XMLGregorianCalendar,
  Description: scalaxb.error.types.Description)

case class RevisionHistory(Revision: scalaxb.error.types.Revision*)

case class Engine(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Generator(Engine: Option[scalaxb.error.types.Engine] = None,
  Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)

case class DocumentTracking(Identification: scalaxb.error.types.Identification,
  Status: scalaxb.error.types.DocumentStatusEnumType,
  Version: String,
  RevisionHistory: scalaxb.error.types.RevisionHistory,
  InitialReleaseDate: javax.xml.datatype.XMLGregorianCalendar,
  CurrentReleaseDate: javax.xml.datatype.XMLGregorianCalendar,
  Generator: Option[scalaxb.error.types.Generator] = None)

case class Note(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
  lazy val Title = attributes.get("@Title") map { _.as[String] }
  lazy val Audience = attributes.get("@Audience") map { _.as[String] }
  lazy val Type = attributes("@Type").as[NoteTypeEnumType]
  lazy val Ordinal = attributes("@Ordinal").as[BigInt]
}

case class DocumentNotes(Note: scalaxb.error.types.Note*)

case class DocumentDistribution(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class AggregateSeverity(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
  lazy val Namespace = attributes.get("@Namespace") map { _.as[java.net.URI] }
}

case class Description2(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Reference(URL: java.net.URI,
    Description: scalaxb.error.types.Description2,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val Type = attributes("@Type").as[ReferenceTypeEnum]
}

case class DocumentReferences(Reference: scalaxb.error.types.Reference*)

case class Name(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Organization(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Description3(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends LocalizedStringable {
  lazy val xmllang = attributes("@{http://www.w3.org/XML/1998/namespace}lang").as[String]
}

case class Acknowledgment(Name: Seq[scalaxb.error.types.Name] = Nil,
  Organization: Seq[scalaxb.error.types.Organization] = Nil,
  Description: Option[scalaxb.error.types.Description3] = None,
  URL: Seq[java.net.URI] = Nil)

case class Acknowledgments(Acknowledgment: scalaxb.error.types.Acknowledgment*)

case class Cvrfdoc(DocumentTitle: scalaxb.error.types.DocumentTitle,
  DocumentType: scalaxb.error.types.DocumentType,
  DocumentPublisher: scalaxb.error.types.DocumentPublisher,
  DocumentTracking: scalaxb.error.types.DocumentTracking,
  DocumentNotes: Option[scalaxb.error.types.DocumentNotes] = None,
  DocumentDistribution: Option[scalaxb.error.types.DocumentDistribution] = None,
  AggregateSeverity: Option[scalaxb.error.types.AggregateSeverity] = None,
  DocumentReferences: Option[scalaxb.error.types.DocumentReferences] = None,
  Acknowledgments: Option[scalaxb.error.types.Acknowledgments] = None,
  ProductTree: Option[scalaxb.error.types.ProductTree] = None,
  Vulnerability: Seq[scalaxb.error.types.Vulnerability] = Nil)


// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package scalaxb.error.types

/**
 * Data type for the check element, a checking system specification URI, string content, and an optional external file reference. The checking system specification should be the URI for a particular version of OVAL or a related system testing language, and the content will be an identifier of a test written in that language. The external file reference could be used to point to the file in which the content test identifier is defined.
 */
case class CheckReferenceType(attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends CheckSearchTypable {
  lazy val system = attributes("@system").as[java.net.URI]
  lazy val name = attributes.get("@name") map { _.as[String] }
  lazy val href = attributes("@href").as[java.net.URI]
}

trait CheckSearchTypable {
  val system: java.net.URI
  val name: Option[String]
}

case class CheckSearchType(attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends CheckSearchTypable {
  lazy val system = attributes("@system").as[java.net.URI]
  lazy val name = attributes.get("@name") map { _.as[String] }
}

case class SearchableCpeReferencesType(cpeReferenceGroupOption1: scalaxb.DataRecord[Any]*)

case class ControlMappingsType(controlu45mapping: scalaxb.error.types.ControlMappingType*)

case class ControlMappingType(mapping: Seq[scalaxb.error.types.MappingInstanceType] = Nil,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val systemu45id = attributes("@system-id").as[java.net.URI]
  lazy val source = attributes("@source").as[java.net.URI]
  lazy val lastu45modified = attributes("@last-modified").as[javax.xml.datatype.XMLGregorianCalendar]
}

case class MappingInstanceType(value: String,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val published = attributes("@published").as[javax.xml.datatype.XMLGregorianCalendar]
}

/**
 * Denotes a scanner and required configuration that is capable of detecting the referenced vulnerability.  May also be an OVAL definition and omit scanner name.Identifies a tool and any associated information about the tool, such as signature versions, that indicate the tool is capable or properly detecting and/or remdiating the vulnerability or misconfiguration
 */
trait AssessmentMethodTypable {
  val assessmentu45check: scalaxb.error.types.CheckReferenceType
  val assessmentu45engine: Seq[java.net.URI]
}

/**
 * Denotes a scanner and required configuration that is capable of detecting the referenced vulnerability.  May also be an OVAL definition and omit scanner name.Identifies a tool and any associated information about the tool, such as signature versions, that indicate the tool is capable or properly detecting and/or remdiating the vulnerability or misconfiguration
 */
case class AssessmentMethodType(assessmentu45check: scalaxb.error.types.CheckReferenceType,
  assessmentu45engine: Seq[java.net.URI] = Nil) extends AssessmentMethodTypable

case class IdentifyableAssessmentMethodType(assessmentu45check: scalaxb.error.types.CheckReferenceType,
    assessmentu45engine: Seq[java.net.URI] = Nil,
    attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) extends AssessmentMethodTypable {
  lazy val id = attributes.get("@id") map { _.as[BigInt] }
}

trait CpeReferenceGroupOption
